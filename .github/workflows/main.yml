name: how.wtf CI

on:
  push:
    branches:
    - main

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      infrastructure: ${{ steps.changes.outputs.infrastructure }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.GH_TOKEN }}
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            infrastructure:
              - 'terraform/**'

  infrastructure:
    needs: changes
    if: ${{ needs.changes.outputs.infrastructure == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.GH_TOKEN }}
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            global:
              - 'terraform/env/global/**'
            website:
              - 'terraform/env/prod/**'
      - name: Deploy global infrastructure
        if: steps.changes.outputs.global == 'true'
        env:
          ENV: global
        run: make deploy
      - name: Deploy website infrastructure
        if: steps.changes.outputs.website == 'true'
        env:
          ENV: prod
        run: make deploy

  publication:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ always() }}
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
        token: ${{ secrets.GH_TOKEN }}
    - uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - uses: peaceiris/actions-hugo@v2
      with:
        extended: true
    - name: Install dependencies
      run: |
        sudo apt-get update -y && sudo apt install -y \
          libimage-exiftool-perl \
          jpegoptim \
          optipng \
          graphicsmagick-imagemagick-compat
    - name: Build website files
      env:
        ENV: prod
        BUCKET: 'how.wtf'
      run: make publish
